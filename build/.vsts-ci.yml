name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
resources:
- repo: self
  clean: true
jobs:
- job: checksubmodule  
  pool:
    name: Hosted Ubuntu 1604
  steps:
  - script: |
      sudo apt-get update && apt-get install -y \
      curl \
      git \
      python-software-properties \
      build-essential \
      pkg-config
      sudo curl -sL https://deb.nodesource.com/setup_6.x | bash -
      sudo apt-get install -y nodejs
    displayName: 'setup'  
  - script: |
      npm install check_submodules
      ./../../node_modules/.bin/check_submodules . master
    displayName: 'build'   
- job: windowsx86
  pool:
    name: 'aziotbld-win03'
  steps:
  - script: |
     if exist jenkins\windows_c.cmd (
      call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat"
      call jenkins\windows_c.cmd)
    displayName: 'build'
  - script: cd .. && rd /Q /S $(Agent.BuildDirectory)\s
    displayName: 'cleanup'
    condition: always()
- job: raspberrypi
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/raspberrypi-c"
  pool: Hosted Ubuntu 1604
  displayName: raspberrypi
  steps:
  - script: |
     if [ -f "jenkins/raspberrypi_c.sh" ]
     then
      sudo ./jenkins/raspberrypi_c.sh
     fi 
    displayName: 'build'  
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
- job: gcc44
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/linux-c-ubuntu-gcc4.4"
  pool: Hosted Ubuntu 1604
  displayName: 'gcc4.4'
  steps:
  - script: |
     if [ -f "jenkins/linux_c_gcc44.sh" ]
     then
      sudo ./jenkins/linux_c_gcc44.sh
     fi
    displayName: 'build'  
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()
- job: gcc46
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/gcc-4.6:latest"
  pool: Hosted Ubuntu 1604
  displayName: 'gcc-4.6'
  steps:
  - script: |
     if [ -f "jenkins/linux_c_gcc44.sh" ]
     then
      sudo ./jenkins/linux_c_gcc44.sh
     fi
    displayName: 'build'  
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()    
- job: linuxoptions
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/vsts-linux-c-ubuntu"
  pool: Hosted Ubuntu 1604
  displayName: 'linux-options'
  steps:
  - script: | 
     if [ -f "jenkins/linux_c_option_test.sh" ]
     then 
      sudo ./jenkins/linux_c_option_test.sh
     fi
    displayName: 'build'
    condition: always()
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()    
- job: windowscex86
  pool:
    name: 'win'
  steps:
  - script: |
     if exist jenkins\windowsce_c.cmd (
      call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat"
      call jenkins\windowsce_c.cmd)
    displayName: 'build'
  - script: cd .. && rd /Q /S $(Agent.BuildDirectory)\s
    displayName: 'cleanup'
    condition: always()    
- job: windowsdynamic
  pool:
    name: 'aziotbld-win03'
  steps:
  - script: |
     if exist jenkins\windows_c_build_as_dynamic.cmd (
      call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat"
      call jenkins\windows_c_build_as_dynamic.cmd)
    displayName: 'build'
  - script: cd .. && rd /Q /S $(Agent.BuildDirectory)\s
    displayName: 'cleanup'
    condition: always()      
- job: OSX
  pool:
    name: OSX
  steps:
  - script: |
     if [ -f "jenkins/osx_gcc_openssl.sh" ]
     then
      ./jenkins/osx_gcc_openssl.sh
     fi
    displayName: 'build'  
  - script: rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()   
- job: clang
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/ubuntu-clang"
  pool: aziotbld-lin01
  displayName: 'clang'
  steps:
  - script: |
     if [ -f "jenkins/ubuntu_clang.sh" ]
     then
      export OPENSSL_ia32cap=0x00000000
      sudo chmod -R 755 .
      sudo -E ./jenkins/ubuntu_clang.sh
     fi
    displayName: 'build'
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()    
- job: ubuntu1604
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/linux-c-ubuntu"
  pool: aziotbld-lin02
  displayName: 'ubuntu1604'
  steps:
  - script: |
     if [ -f "jenkins/ubuntu1604_c.sh" ]
     then
      export OPENSSL_ia32cap=0x00000000
      sudo chmod -R 755 .
      sudo -E ./jenkins/ubuntu1604_c.sh
     fi
    displayName: 'build'
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()    
- job: debian
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/c-debian"
  pool: c-df
  displayName: 'debian'
  steps:
  - script: |
     if [ -f "jenkins/debian_c.sh" ]
     then
      sudo chmod 755 jenkins/debian_c.sh
      sudo -E ./debian_c.sh
      sudo jenkins/debian_c.sh
     fi
    displayName: 'build'
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()    
- job: wolfssl
  variables:
    _PREVIEW_VSTS_DOCKER_IMAGE: "aziotbld/vsts-c-wolfssl"
  pool: Hosted Ubuntu 1604
  displayName: 'wolfssl'
  steps:
  - script: |
     if [ -f "jenkins/linux_wolfssl.sh" ]
     then
      LD_LIBRARY_PATH=/usr/local/lib
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/my_library/
      sudo jenkins/linux_wolfssl.sh
     fi
    displayName: 'build'
  - script: sudo rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()
- job: windowsx64
  pool:
    name: 'aziotbld-win03'
  displayName: 'windowsx64'
  steps:
  - script: |
     if exist jenkins\windows_c.cmd (
      call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat"
      call jenkins\windows_c.cmd --platform x64)
    displayName: 'build'
  - script: cd .. && rd /Q /S $(Agent.BuildDirectory)\s
    displayName: 'cleanup'
    condition: always()    
- job: xcodenative
  pool:
    name: OSX
  steps:
  - script: |
     if [ -f "jenkins/osx_xcode_native.sh" ]
     then
      DYLD_LIBRARY_PATH=/usr/local/Cellar/curl/7.61.0/lib
      ./jenkins/osx_xcode_native.sh
     fi
    displayName: 'build'  
  - script: rm -rf $(Agent.BuildDirectory)/*
    displayName: 'cleanup'
    condition: always()
